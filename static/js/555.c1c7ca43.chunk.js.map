{"version":3,"file":"static/js/555.c1c7ca43.chunk.js","mappings":"mQAEaA,GAAqBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAOjCC,EAAqBJ,EAAAA,GAAAA,OAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sLAWlCG,GAAoBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gP,SCVjCM,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAeXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KAEJM,QACAH,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,SAAUP,EAAAA,KAEPG,IAAI,EAAG,cAEPE,SAAS,cAGd,OACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbR,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZI,iBAAkBZ,EAClBa,SAxCiB,SAACC,EAAKC,GAAqB,IAAjBC,EAASD,EAATC,UACrBb,EAA0BW,EAA1BX,KAAMI,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SACrBV,GACEmB,EAAAA,EAAAA,IAAS,CACPd,KAAMA,EACNI,MAAOA,EACPC,SAAUA,KAIdQ,GACF,EA6B2BE,UAEvBC,EAAAA,EAAAA,MAAChC,EAAkB,CAAA+B,SAAA,EACjBT,EAAAA,EAAAA,KAACf,EAAiB,CAChB0B,KAAK,OACLjB,KAAK,OACLkB,YAAY,kBACZC,aAAa,cAEfb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAU,MAAMrB,KAAK,UAEnCM,EAAAA,EAAAA,KAACf,EAAiB,CAChB0B,KAAK,QACLjB,KAAK,QACLkB,YAAY,mBACZC,aAAa,cAEfb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAU,MAAMrB,KAAK,WAEnCM,EAAAA,EAAAA,KAACf,EAAiB,CAChB0B,KAAK,WACLjB,KAAK,WACLmB,aAAa,mBACbD,YAAY,yBAEdZ,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAU,MAAMrB,KAAK,cAEnCM,EAAAA,EAAAA,KAACjB,EAAkB,CAAC4B,KAAK,SAAQF,SAAC,gBAI1C,ECnFaO,EAAoBrC,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAM9BmC,EAAgBtC,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yDCJvB,SAASoC,IACtB,OACER,EAAAA,EAAAA,MAACM,EAAiB,CAAAP,SAAA,EAChBT,EAAAA,EAAAA,KAACiB,EAAa,CAAAR,SAAC,kBAEfT,EAAAA,EAAAA,KAACZ,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const RegisterFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 300px;\n`;\n\nexport const RegisterFormButton = styled.button`\n  margin: auto;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  max-width: 120px;\n  width: 100%;\n  background-color: rgb(194, 139, 240);\n  padding: 5px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  height: auto;\n  margin: 0;\n  outline: 0;\n  padding: 15px;\n  width: 100%;\n  background-color: #e8eeef;\n  color: #8a97a0;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'components/redux/auth/operation';\nimport {\n  RegisterFormButton,\n  RegisterFormInput,\n  RegisterFormStyled,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    const { name, email, password } = value;\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n\n    resetForm();\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .min(3, 'Too Short!')\n      .max(30, 'Too Long!')\n      .required('Required'),\n    email: yup\n      .string()\n      .email()\n      .min(3, 'Too Short!')\n      .max(30, 'Too Long!')\n      .required('Required'),\n    password: yup\n      .string()\n      .min(5, 'Too Short!')\n\n      .required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <RegisterFormStyled>\n        <RegisterFormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Input your Name\"\n          autoComplete=\"username\"\n        />\n        <ErrorMessage component=\"div\" name=\"name\" />\n\n        <RegisterFormInput\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Input your Email\"\n          autoComplete=\"username\"\n        />\n        <ErrorMessage component=\"div\" name=\"email\" />\n\n        <RegisterFormInput\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          placeholder=\"Input your Password\"\n        />\n        <ErrorMessage component=\"div\" name=\"password\" />\n\n        <RegisterFormButton type=\"submit\">Sign Up</RegisterFormButton>\n      </RegisterFormStyled>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nexport const RegisterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterTitle = styled.h1`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterContainer, RegisterTitle } from './Register.styled';\n\nexport default function RegisterPage() {\n  return (\n    <RegisterContainer>\n      <RegisterTitle>Registration</RegisterTitle>\n\n      <RegisterForm />\n    </RegisterContainer>\n  );\n}\n"],"names":["RegisterFormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","RegisterFormButton","_templateObject2","RegisterFormInput","Field","_templateObject3","RegisterForm","dispatch","useDispatch","schema","yup","shape","name","min","max","required","email","password","_jsx","Formik","initialValues","validationSchema","onSubmit","value","_ref","resetForm","register","children","_jsxs","type","placeholder","autoComplete","ErrorMessage","component","RegisterContainer","RegisterTitle","RegisterPage"],"sourceRoot":""}